# Generated by Django 5.0.7 on 2025-08-05 19:57

import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('loans', '0002_initial'),
        ('members', '0001_initial'),
        ('repayments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SMSProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('provider_type', models.CharField(choices=[('africastalking', "Africa's Talking"), ('twilio', 'Twilio'), ('infobip', 'Infobip'), ('clickatell', 'Clickatell'), ('custom', 'Custom API')], max_length=20)),
                ('api_key', models.CharField(max_length=200)),
                ('api_secret', models.CharField(blank=True, max_length=200, null=True)),
                ('sender_id', models.CharField(max_length=20)),
                ('api_url', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('cost_per_sms', models.DecimalField(decimal_places=4, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('daily_limit', models.PositiveIntegerField(default=1000)),
                ('monthly_limit', models.PositiveIntegerField(default=10000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SMS Provider',
                'verbose_name_plural': 'SMS Providers',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('notification_type', models.CharField(choices=[('system', 'System Notification'), ('reminder', 'Reminder'), ('alert', 'Alert'), ('announcement', 'Announcement'), ('transaction', 'Transaction Notification'), ('marketing', 'Marketing Message')], max_length=20)),
                ('channel', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('in_app', 'In-App Notification'), ('push', 'Push Notification')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('html_message', models.TextField(blank=True, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('response_received', models.BooleanField(default=False)),
                ('response_message', models.TextField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('delivery_report', models.JSONField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('context_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
                ('recipient_member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='members.member')),
                ('recipient_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL)),
                ('related_application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='loans.loanapplication')),
                ('related_loan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='loans.loan')),
                ('related_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='repayments.repaymenttransaction')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('read', 'Read'), ('clicked', 'Clicked'), ('replied', 'Replied'), ('bounced', 'Bounced'), ('unsubscribed', 'Unsubscribed')], max_length=20)),
                ('details', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_enabled', models.BooleanField(default=True)),
                ('email_enabled', models.BooleanField(default=True)),
                ('in_app_enabled', models.BooleanField(default=True)),
                ('push_enabled', models.BooleanField(default=True)),
                ('loan_notifications', models.BooleanField(default=True)),
                ('payment_notifications', models.BooleanField(default=True)),
                ('reminder_notifications', models.BooleanField(default=True)),
                ('marketing_notifications', models.BooleanField(default=False)),
                ('system_notifications', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('timezone', models.CharField(default='Africa/Nairobi', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('retrying', 'Retrying')], default='pending', max_length=20)),
                ('priority', models.PositiveIntegerField(default=5)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('scheduled_for', models.DateTimeField()),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queue_entries', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Notification Queue',
                'verbose_name_plural': 'Notification Queue',
                'ordering': ['priority', 'scheduled_for'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('template_type', models.CharField(choices=[('loan_application_received', 'Loan Application Received'), ('loan_approved', 'Loan Approved'), ('loan_rejected', 'Loan Rejected'), ('loan_disbursed', 'Loan Disbursed'), ('repayment_reminder', 'Repayment Reminder'), ('payment_received', 'Payment Received'), ('overdue_notice', 'Overdue Notice'), ('penalty_applied', 'Penalty Applied'), ('loan_completed', 'Loan Completed'), ('member_birthday', 'Member Birthday'), ('welcome_message', 'Welcome Message'), ('password_reset', 'Password Reset'), ('account_suspended', 'Account Suspended'), ('general_announcement', 'General Announcement')], max_length=30)),
                ('channel', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('both', 'SMS and Email')], max_length=10)),
                ('sms_subject', models.CharField(blank=True, max_length=50, null=True)),
                ('sms_message', models.TextField(help_text='SMS message template. Use {{variable}} for dynamic content.')),
                ('email_subject', models.CharField(blank=True, max_length=200, null=True)),
                ('email_message', models.TextField(blank=True, help_text='Email message template. Use {{variable}} for dynamic content.', null=True)),
                ('email_html', models.TextField(blank=True, help_text='HTML version of email template.', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_system_template', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_notification_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='notifications.notificationtemplate'),
        ),
        migrations.CreateModel(
            name='BulkNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_name', models.CharField(max_length=100)),
                ('target_type', models.CharField(choices=[('all_members', 'All Members'), ('active_members', 'Active Members'), ('overdue_members', 'Members with Overdue Loans'), ('loan_officers', 'Loan Officers'), ('staff', 'All Staff'), ('custom', 'Custom Recipients')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('html_message', models.TextField(blank=True, null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_bulk_notifications', to=settings.AUTH_USER_MODEL)),
                ('target_members', models.ManyToManyField(blank=True, related_name='bulk_notifications', to='members.member')),
                ('target_users', models.ManyToManyField(blank=True, related_name='bulk_notifications', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_notifications', to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Bulk Notification',
                'verbose_name_plural': 'Bulk Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AutomatedNotificationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('trigger_event', models.CharField(choices=[('loan_application_submitted', 'Loan Application Submitted'), ('loan_approved', 'Loan Approved'), ('loan_disbursed', 'Loan Disbursed'), ('payment_received', 'Payment Received'), ('payment_overdue', 'Payment Overdue'), ('loan_completed', 'Loan Completed'), ('member_registered', 'Member Registered'), ('member_birthday', 'Member Birthday')], max_length=30)),
                ('conditions', models.JSONField(blank=True, null=True)),
                ('delay_minutes', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_notification_rules', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automation_rules', to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Automated Notification Rule',
                'verbose_name_plural': 'Automated Notification Rules',
                'ordering': ['name'],
            },
        ),
    ]
